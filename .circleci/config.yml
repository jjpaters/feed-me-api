version: 2.1

#############################################################
# Define workflows
#############################################################
workflows:
  version: 2
  pipeline:
    jobs:
      - build
      - test
      - deploy:
          context: AWS
          requires:
            - build
            - test
          filters:
            branches:
              only:
                - main

#############################################################
# Define jobs
#############################################################
jobs:

  build:
    working_directory: ~/app
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.1
    steps:
      - checkout
      - run:
          name: "Replace Environment Variables"
          command: |
            chmod +x environment-variables.sh
            ./environment-variables.sh
      - run:
          name: Install Build Dependencies and Package Build
          command: |
            apt-get update && apt-get -y install zip
            export PATH="$PATH:/root/.dotnet/tools"
            dotnet tool install -g Amazon.Lambda.Tools
            dotnet lambda package -pl ./FeedMe.Api -o ./package/lambda.zip -c Release -f netcoreapp3.1
      - persist_to_workspace:
          root: .
          paths:
            - package

  test:
    working_directory: ~/app
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.1
    steps:
      - checkout
      - run:
          name: Restore Project Dependencies
          command: dotnet restore
      - run:
          name: Run Unit Tests
          command: |
            export PATH="$PATH:/root/.dotnet/tools"
            dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

  deploy:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install bash and curl
          command: |
            apk update
            apk add -y curl
            apk add -y bash
            apk update
            apk upgrade
      - run:
          name: Install CLI
          command: |
            apk add --update python python-dev py-pip build-base
            pip install awscli
      - run:
          name: Set Credentials
          command: |          
            aws configure set region us-east-1
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
      - run:
          name: Deploy AWS Lambda
          command: aws lambda update-function-code --function-name feed-me-lambda --zip-file "fileb://package/lambda.zip"
