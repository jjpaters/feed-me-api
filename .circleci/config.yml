version: 2.1

#############################################################
# Define workflows
#############################################################
workflows:
  version: 2
  pipeline:
    jobs:
      - install_dependencies
      - lint:
          requires:
            - install_dependencies
      - build:
          requires:
            - install_dependencies
      - deploy:
          requires:
            - build
            - lint
          filters:
            branches:
              only:
                - master

#############################################################
# Define jobs
#############################################################
jobs:
  install_dependencies:
    working_directory: ~/app
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: v1-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: v1-{{ checksum "package.json" }}
          paths:
            - node_modules
  lint:
    working_directory: ~/app
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: npm install
      - run: npm run lint
  build:
    working_directory: ~/app
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: npm install
      - run: chmod +x pack.sh
      - run: ./pack.sh
      - persist_to_workspace:
          root: .
          paths:
            - dist
  deploy:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install bash and curl
          command: |
            apk update
            apk add -y curl
            apk add -y bash
            apk update
            apk upgrade
      - run:
          name: Install CLI
          command: |
            apk add --update python python-dev py-pip build-base
            pip install awscli
      - run:
          name: Set Credentials
          command: |          
            aws configure set region us-east-1
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
      - run:
          name: Deploy AWS Lambda
          command: aws lambda update-function-code --function-name feed-me-lambda --zip-file fileb://dist/function.zip